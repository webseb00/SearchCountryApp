{"version":3,"sources":["actions/actions-countries.js","reducers/countries-reducer.js","reducers/index.js","store/index.js","presentational/navigation.component.js","presentational/home.component.js","presentational/flag.component.js","presentational/flag-list.component.js","containers/flag-container.component.js","presentational/contact.component.js","presentational/not-found.component.js","presentational/country-details.component.js","containers/country-details-container.component.js","containers/continents-container.component.js","routes.js","index.js"],"names":["GET_COUNTRIES","GET_COUNTRY","DELETE_COUNTRY","SEARCH_COUNTRIES","SET_CONTINENT","deleteCountry","id","type","searchCountries","searchText","setContinent","name","initialState","countries","selectedCountry","visibleCountries","countriesReducer","state","action","Object","assign","find","country","parseInt","filter","toLowerCase","includes","notDeletedCountries","notDeletedVisibleCountries","continentCountries","continent","reducers","combineReducers","store","createStore","Navigation","props","className","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","onlyActiveOnIndex","children","Home","CountryFlag","src","imageUrl","alt","CountryFlagList","map","key","onClick","bind","CountryFlagContainer","this","dispatch","e","target","value","onChange","search","Component","connect","Contact","NotFound","CountryDetails","populace","capital","currency","CountryDetailsContainer","params","ContinentsContainer","event","htmlFor","chooseContinent","path","component","root","document","getElementById","render","history","hashHistory","routes"],"mappings":"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","file":"static/js/main.b4e47048.chunk.js","sourcesContent":["export const GET_COUNTRIES = 'GET_COUNTRIES';\r\nexport const GET_COUNTRY = 'GET_COUNTRY';\r\nexport const DELETE_COUNTRY = 'DELETE_COUNTRY';\r\nexport const SEARCH_COUNTRIES = 'SEARCH_COUNTRIES';\r\nexport const SET_CONTINENT = 'SET_CONTINENT';\r\n\r\n\r\nexport function getCountries() {\r\n    return {\r\n        type: GET_COUNTRIES\r\n    }\r\n}\r\n\r\nexport function deleteCountry(id) {\r\n    return {\r\n        type: DELETE_COUNTRY,\r\n        id\r\n    };\r\n}\r\n\r\nexport function getCountry(id) {\r\n    return {\r\n        type: GET_COUNTRY,\r\n        id\r\n    }\r\n}\r\n\r\nexport function searchCountries(searchText) {\r\n    return {\r\n        type: SEARCH_COUNTRIES,\r\n        searchText\r\n    }\r\n}\r\n\r\nexport function setContinent(name) {\r\n    return {\r\n        type: SET_CONTINENT,\r\n        name\r\n    }\r\n}","import { GET_COUNTRIES, GET_COUNTRY, SEARCH_COUNTRIES, DELETE_COUNTRY, SET_CONTINENT } from '../actions/actions-countries.js';\r\nimport countriesData from '../data/countries.json';\r\n\r\nconst initialState = {\r\n    countries: countriesData,\r\n    selectedCountry: {},\r\n    visibleCountries: []\r\n};\r\n\r\nconst countriesReducer = function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_COUNTRIES:\r\n            return Object.assign({}, state, {countries: state.countries});\r\n        case GET_COUNTRY:\r\n            const selectedCountry = state.countries.find(country => country.id === parseInt(action.id));\r\n            return Object.assign({}, state, {selectedCountry});\r\n        case SEARCH_COUNTRIES: \r\n            const searchCountries = state.countries.filter(country => country.name.toLowerCase().includes(action.searchText.toLowerCase()));\r\n            return Object.assign({}, state, {visibleCountries: searchCountries});\r\n        case DELETE_COUNTRY:\r\n            const notDeletedCountries = state.countries.filter(country => country.id !== action.id);\r\n            const notDeletedVisibleCountries = state.visibleCountries.filter(country => country.id !== action.id);\r\n            return Object.assign({}, state, {countries: notDeletedCountries, visibleCountries: notDeletedVisibleCountries});\r\n        case SET_CONTINENT:\r\n            const continentCountries = state.countries.filter(country => country.continent === action.name);\r\n            return Object.assign({}, state, {visibleCountries: continentCountries});\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default countriesReducer;","import { combineReducers } from 'redux';\r\nimport countriesReducer from './countries-reducer';\r\n\r\nconst reducers = combineReducers({\r\n    countriesReducer\r\n});\r\n\r\nexport default reducers;","import { createStore } from 'redux';\r\nimport reducers from '../reducers/index';\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport { Link } from 'react-router';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'jquery';\r\nimport 'popper.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle';\r\n\r\n\r\nconst Navigation = props => (\r\n    <div>\r\n        <nav className=\"navbar navbar-expand-lg bg-dark navbar-dark\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-header\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Pa≈Ñstwa.js</Link>\r\n                </div>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" activeClassName=\"active\" onlyActiveOnIndex to=\"/countries\">Countries</Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" activeClassName=\"active\" onlyActiveOnIndex to=\"/continents\">Continents</Link></li>\r\n                        <li className=\"nav-item\"><Link className=\"nav-link\" activeClassName=\"active\" onlyActiveOnIndex to=\"/contact\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        <div className=\"container-fluid\">\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Home = () => (\r\n    <div className=\"main-content\">\r\n        <h1>Witamy w aplikacji Pa≈Ñstwa.js!</h1>\r\n    </div>\r\n)\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst CountryFlag = (props) => (\r\n    <div className=\"country-logo-wrapper\">\r\n        <img className=\"country-logo\" src={props.country.imageUrl} alt=\"country flag\" />\r\n    </div>\r\n);\r\n\r\nexport default CountryFlag;","import React from 'react';\r\nimport { Link } from 'react-router';\r\nimport CountryFlag from './flag.component';\r\n\r\nconst CountryFlagList = (props) => (\r\n    <div className=\"countries-list\">\r\n        {\r\n            props.countries.map(country => {\r\n                return (\r\n                    <div className=\"single-country\" key={country.id}>\r\n                        <Link className=\"logo\" to={'/countries/country' + country.id}>\r\n                            <CountryFlag country={country} />\r\n                        </Link>\r\n                        <h4 className=\"single-country-name\">{country.name}</h4>\r\n                        <button type=\"button\" className=\"btn btn-primary btn-sm btn-block\" onClick={props.deleteCountry.bind(null, country.id)}>DELETE</button>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default CountryFlagList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CountryFlagList from '../presentational/flag-list.component';\r\nimport { getCountries, searchCountries, deleteCountry } from '../actions/actions-countries';\r\n\r\nclass CountryFlagContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getCountries());\r\n        this.props.dispatch(searchCountries(''));\r\n    }\r\n\r\n    search(e) {\r\n        this.props.dispatch(searchCountries(e.target.value));\r\n    }\r\n\r\n    deleteCountry(id) {\r\n        this.props.dispatch(deleteCountry(id));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-content\">\r\n                <div className=\"search\">\r\n                    <input type=\"text\" className=\"form-control\" onChange={this.search.bind(this)}/>\r\n                </div>\r\n                <CountryFlagList countries={this.props.visibleCountries} deleteCountry={this.deleteCountry.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n    countries: store.countriesReducer.countries,\r\n    visibleCountries: store.countriesReducer.visibleCountries\r\n});\r\n\r\nexport default connect(mapStateToProps)(CountryFlagContainer);","import React from 'react';\r\n\r\nconst Contact = () => (\r\n    <div className=\"main-content\">\r\n        <h1>Ulica: Route 66</h1>\r\n    </div>\r\n);\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n    <h1>Error 404...podana strona nie istnieje</h1>\r\n);\r\n\r\nexport default NotFound;","import React from 'react';\r\n\r\nconst CountryDetails = (props) => (\r\n    <div className=\"country-wrapper\">\r\n        <header>\r\n            <img className=\"country-photo\" src={props.country.imageUrl} alt=\"country photo\" />\r\n        </header>\r\n        <div className=\"country-info\">\r\n            <h1>{props.country.name}</h1>\r\n            <h2>Kontynent: {props.country.continent}</h2>\r\n\r\n            <div className=\"info\">\r\n                <div>\r\n                    <span>{props.country.populace}</span>\r\n                    <span>Ludno≈õƒá[mln]</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{props.country.capital}</span>\r\n                    <span>Stolica</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <span>{props.country.currency}</span>\r\n                    <span>Waluta</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CountryDetails;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCountry } from '../actions/actions-countries';\r\nimport CountryDetails from '../presentational/country-details.component';\r\n\r\nclass CountryDetailsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getCountry(this.props.params.id));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CountryDetails country={this.props.selectedCountry} />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n    selectedCountry: store.countriesReducer.selectedCountry\r\n});\r\n\r\nexport default connect(mapStateToProps)(CountryDetailsContainer);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setContinent, deleteCountry } from '../actions/actions-countries';\r\nimport CountryFlagList from '../presentational/flag-list.component';\r\n\r\nclass ContinentsContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    chooseContinent(event) {\r\n        this.props.dispatch(setContinent(event.target.value))\r\n    }\r\n\r\n    deleteCountry(id) {\r\n        this.props.dispatch(deleteCountry(id));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(setContinent('Europa'));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-content\">\r\n                <div className=\"form-group text-center\">\r\n                    <label className=\"font-weight-bolder\" htmlFor=\"selectContinent\">Wybierz kontynent:</label>\r\n                    <select onChange={e => this.chooseContinent(e)} className=\"form-control\" id=\"selectContinent\">\r\n                        <option value=\"Europa\">Europa</option>\r\n                        <option value=\"Afryka\">Afryka</option>\r\n                    </select>\r\n                </div>\r\n                <CountryFlagList countries={this.props.visibleCountries} deleteCountry={this.deleteCountry.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => ({\r\n    visibleCountries: store.countriesReducer.visibleCountries\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContinentsContainer);","import React from 'react';\r\nimport { Route, IndexRoute } from 'react-router';\r\nimport Navigation from './presentational/navigation.component';\r\nimport Home from './presentational/home.component';\r\nimport CountryFlagContainer from './containers/flag-container.component';\r\nimport Contact from './presentational/contact.component';\r\nimport NotFound from './presentational/not-found.component';\r\nimport CountryDetailsContainer from './containers/country-details-container.component';\r\nimport ContinentsContainer from './containers/continents-container.component';\r\n\r\nexport default (\r\n    <Route path='/' component={Navigation}>\r\n        <IndexRoute component={Home} />\r\n        <Route path='countries'>\r\n            <IndexRoute  component={CountryFlagContainer} />\r\n            <Route path='country:id' component={CountryDetailsContainer} />\r\n        </Route>\r\n        <Route path='continents' component={ContinentsContainer} />\r\n        <Route path='contact' component={Contact} />\r\n        <Route path='*' component={NotFound} />\r\n    </Route>\r\n);","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { Router, hashHistory } from 'react-router';\r\nimport store from './store/index';\r\nimport routes from './routes';\r\nimport './country.css';\r\n\r\nconst root = document.getElementById('root');\r\n\r\nrender(\r\n<Provider store={store}>\r\n    <Router history={hashHistory} routes={routes}>\r\n    </Router>\r\n</Provider>,\r\nroot);"],"sourceRoot":""}